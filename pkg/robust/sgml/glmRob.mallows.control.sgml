<!doctype s-function-doc system "s-function-doc.dtd" [
<!entity % S-OLD "INCLUDE">
]
>
<s-function-doc>
<s-topics>
   <s-topic>glmRob.mallows.control</s-topic>
</s-topics>
<s-title>
Control for Mallows-type Robust GLM Estimator
</s-title>
<s-description>
Allows users to set parameters for <s-expression>glmRob</s-expression>.
</s-description>
<s-usage>
<s-old-style-usage>
glmRob.mallows.control(wt.fn = wt.carroll, wt.tuning = 8)
</s-old-style-usage>
</s-usage>
<s-args-optional>
<s-arg name="wt.fn">
a weight function that might depend on a tuning constant.
This function will be evaluated at the square root of the
robust Mahalanobis distances of the covariates divided by their
dimension.
</s-arg>
<s-arg name="wt.tuning">
a tuning constant for <s-expression>wt.fn</s-expression>.
</s-arg>
</s-args-optional>
<s-value>
a list is returned, consisting of these parameters packaged to be 
used by <s-expression>glmRob()</s-expression>. The values for <s-expression>glmRob.mallows.control()</s-expression> can be supplied 
directly in a call to <s-expression>glmRob()</s-expression>. These values are filtered through  
<s-expression>glmRob.mallows.control()</s-expression> inside <s-expression>glmRob()</s-expression>. 
</s-value>
<s-see>
<s-function name="glmRob.sgm">glmRob</s-function>. </s-see>
<s-examples>
<s-example type = text>
glmRob(formula, family, fit.method = 'mallows', mallows.control=glmRob.mallows.control(wt.fn = wt.huber))
glmRob(formula, family, fit.method = 'mallows', wt.tuning = 5)
# These are equivalent 
</s-example>
</s-examples>
<s-keywords>
<s-keyword>robust</s-keyword>
<s-keyword>regression</s-keyword>
<s-keyword>librobust</s-keyword>
</s-keywords>
<s-docclass>
function
</s-docclass>
</s-function-doc>
