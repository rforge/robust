<!doctype s-function-doc system "s-function-doc.dtd" [
<!entity % S-OLD "INCLUDE">
]
>
<s-function-doc>
<s-topics>
<s-topic>summary.rq</s-topic>
</s-topics>
<s-title>
Summary method for Quantile Regression
</s-title>
<s-description>
Returns a summary list for a quantile regression fit.  A null value
will be returned if printing is invoked.
</s-description>
<s-usage>
<s-old-style-usage>
summary.rq(object, se="nid", covariance=T)
</s-old-style-usage>
</s-usage>
<s-args-required>
<s-arg name= object >
This is an object of class rq produced by a call to rq().
</s-arg>
</s-args-required>
<s-args-optional>
<s-arg name= se >
specifies the method used to compute standard errors.  There
are currently three available methods:  
<br> <br>

   1.  "iid" which presumes that the errors are iid and computes
               an estimate of the asymptotic covariance matrix as in KB(1978).
<br> <br>
   2.  "nid" which presumes local (in tau) linearity (in x) of
               the conditional quantile functions and computes a Huber
               sandwich estimate using a local estimate of the sparsity.
<br> <br>
   3.  "ker" which uses a kernel estimate of the sandwich as proposed
               by Powell(1990).
<br> <br>

</s-arg>
<s-arg name= covariance >
logical flag to indicate whether the full covariance matrix of the 
estimated parameters should be returned. 
</s-arg>
</s-args-optional>
<s-value>
a list is returned with the following components
<s-return-component name="coefficients">
a p by 4 matrix consisting of the coefficients, their estimated standard
errors, their t-statistics, and their associated p-values.
</s-return-component>
<s-return-component name="cov">
the estimated covariance matrix for the coefficients in the model,
provided that cov=T in the called sequence.
</s-return-component>
<s-return-component name="Hinv">
inverse of the estimated Hessian matrix returned if cov=T and se!=iid.
</s-return-component>
<s-return-component name="J">
Outer product of gradient matrix returned if cov=T and se!=iid.
The Huber sandwich is cov = Hinv%*%J%*%Hinv.
</s-return-component>
<s-side-effects>
<!--describe any side effects if they exist-->
</s-side-effects>
<s-details>
<!--explain details here-->
</s-details>
<s-section name = "REFERENCES">
Koenker, R. (2000) <it>Quantile Regression</it>.
</s-section>
<s-see>
<s-function name="rq.sgm">rq</s-function>. 
</s-see>
<s-examples>
y <- stack.loss
x <- stack.x
summary(rq(y~x,method="fn")) #Compute se's for fit using "nid" method.
summary(rq(y~x,ci=F),se="ker") #default "br" alg, and compute kernel method se's
</s-examples>
<s-keywords>librobust</s-keywords>
<s-keywords>regression</s-keywords>
<s-docclass>
function
</s-docclass>
</s-function-doc>
