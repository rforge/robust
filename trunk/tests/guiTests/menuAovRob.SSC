##
##	Tests for menuAovRob Plots and Results Pages
##

guiSetOption( option.name="AutoAddPages", value.string="Off" )

tests <- list(list(formula = y ~ ., data = lawson.dat))
				
methods <- c("LS + Robust", "Robust", "LS")

for (test in tests) {
	for(method in methods) {

##
##	Test Results
##

	menuAovRob(formula = test$formula, rob.rad.p = method, data = test$data,
		print.object.p = T, sequentialSS.p = F, coef.p = F, dummy.coef.p = F)

	menuAovRob(formula = test$formula, rob.rad.p = method, data = test$data,
		print.object.p = F, sequentialSS.p = T, coef.p = F, dummy.coef.p = F)

	menuAovRob(formula = test$formula, rob.rad.p = method, data = test$data,
		print.object.p = F, sequentialSS.p = F, coef.p = T, dummy.coef.p = F)

	menuAovRob(formula = test$formula, rob.rad.p = method, data = test$data,
		print.object.p = F, sequentialSS.p = F, coef.p = F, dummy.coef.p = T)

	menuAovRob(formula = test$formula, rob.rad.p = method, data = test$data,
		print.object.p = T, sequentialSS.p = T, coef.p = F, dummy.coef.p = F)

	menuAovRob(formula = test$formula, rob.rad.p = method, data = test$data,
		print.object.p = T, sequentialSS.p = F, coef.p = T, dummy.coef.p = F)

	menuAovRob(formula = test$formula, rob.rad.p = method, data = test$data,
		print.object.p = T, sequentialSS.p = F, coef.p = F, dummy.coef.p = T)

	menuAovRob(formula = test$formula, rob.rad.p = method, data = test$data,
		print.object.p = F, sequentialSS.p = T, coef.p = T, dummy.coef.p = F)

	menuAovRob(formula = test$formula, rob.rad.p = method, data = test$data,
		print.object.p = F, sequentialSS.p = T, coef.p = F, dummy.coef.p = T)

	menuAovRob(formula = test$formula, rob.rad.p = method, data = test$data,
		print.object.p = F, sequentialSS.p = F, coef.p = T, dummy.coef.p = T)

	menuAovRob(formula = test$formula, rob.rad.p = method, data = test$data,
		print.object.p = T, sequentialSS.p = T, coef.p = T, dummy.coef.p = F)

	menuAovRob(formula = test$formula, rob.rad.p = method, data = test$data,
		print.object.p = T, sequentialSS.p = T, coef.p = F, dummy.coef.p = T)

	menuAovRob(formula = test$formula, rob.rad.p = method, data = test$data,
		print.object.p = T, sequentialSS.p = F, coef.p = T, dummy.coef.p = T)

	menuAovRob(formula = test$formula, rob.rad.p = method, data = test$data,
		print.object.p = F, sequentialSS.p = T, coef.p = T, dummy.coef.p = T)

	menuAovRob(formula = test$formula, rob.rad.p = method, data = test$data,
		print.object.p = T, sequentialSS.p = T, coef.p = T, dummy.coef.p = T)

##
##	Test QQ plots
##

#	menuAovRob(formula = test$formula, data = test$data, sequentialSS.p = F,
#		fitting.p = method, plotQQ.p = T, QQplotEnvelope.p = F,
#		robQQline.p = F, halfNormal.p = F)

#	menuAovRob(formula = test$formula, data = test$data, sequentialSS.p = F,
#		fitting.p = method, plotQQ.p = T, QQplotEnvelope.p = T,
#		robQQline.p = F, halfNormal.p = F)

#	menuAovRob(formula = test$formula, data = test$data, sequentialSS.p = F,
#		fitting.p = method, plotQQ.p = T, QQplotEnvelope.p = F,
#		robQQline.p = T, halfNormal.p = F)

#	menuAovRob(formula = test$formula, data = test$data, sequentialSS.p = F,
#		fitting.p = method, plotQQ.p = T, QQplotEnvelope.p = F,
#		robQQline.p = F, halfNormal.p = T)

#	menuAovRob(formula = test$formula, data = test$data, sequentialSS.p = F,
#		fitting.p = method, plotQQ.p = T, QQplotEnvelope.p = T,
#		robQQline.p = T, halfNormal.p = F)

#	menuAovRob(formula = test$formula, data = test$data, sequentialSS.p = F,
#		fitting.p = method, plotQQ.p = T, QQplotEnvelope.p = T,
#		robQQline.p = F, halfNormal.p = T)

#	menuAovRob(formula = test$formula, data = test$data, sequentialSS.p = F,
#		fitting.p = method, plotQQ.p = T, QQplotEnvelope.p = F,
#		robQQline.p = T, halfNormal.p = T)

#	menuAovRob(formula = test$formula, data = test$data, sequentialSS.p = F,
#		fitting.p = method, plotQQ.p = T, QQplotEnvelope.p = T,
#		robQQline.p = T, halfNormal.p = T)

##
##	Test plots with smooth and rugplot options
##

sms <- c(T, F)
rps <- c(T, F)

	for (sm in sms) {
		for (rp in rps) {
			
			menuAovRob(formula = test$formula, data = test$data,
				rob.rad.p = method, sequentialSS.p = F,
				plotResidVsFit.p = T, smooths.p = sm, rugplot.p = rp)

			menuAovRob(formula = test$formula, data = test$data,
				rob.rad.p = method, sequentialSS.p = F,
				plotSqrtAbsResid.p = T, smooths.p = sm, rugplot.p = rp)
		
			menuAovRob(formula = test$formula, data = test$data,
				rob.rad.p = method, sequentialSS.p = F,
				plotResponseVsFit.p = T, smooths.p = sm, rugplot.p = rp)
		}
	}
		
	menuAovRob(formula = test$formula, data = test$data,
		rob.rad.p = method, sequentialSS.p = F,
		plotRFSpread.p = T)
		
	menuAovRob(formula = test$formula, data = test$data,
		rob.rad.p = method, sequentialSS.p = F,
		plotDensity.p = T)

##
##	Test Overlaid Plots
##

	menuAovRob(formula = test$formula, data = test$data,
		rob.rad.p = method, sequentialSS.p = F,
		overlaidQ.p = T)

	menuAovRob(formula = test$formula, data = test$data,
		rob.rad.p = method, sequentialSS.p = F,
		overlaidD.p = T)

##
##	Test Partial Plots
##

	menuAovRob(formula = test$formula, data = test$data,
		rob.rad.p = method, sequentialSS.p = F,
		plotPartialResid.p = T, plotPartialFit.p = F, rugplotPartialResid.p = F,
		scalePartialResid.p = F)

	menuAovRob(formula = test$formula, data = test$data,
		rob.rad.p = method, sequentialSS.p = F,
		plotPartialResid.p = T, plotPartialFit.p = T, rugplotPartialResid.p = F,
		scalePartialResid.p = F)

	menuAovRob(formula = test$formula, data = test$data,
		rob.rad.p = method, sequentialSS.p = F,
		plotPartialResid.p = T, plotPartialFit.p = F, rugplotPartialResid.p = T,
		scalePartialResid.p = F)

	menuAovRob(formula = test$formula, data = test$data,
		rob.rad.p = method, sequentialSS.p = F,
		plotPartialResid.p = T, plotPartialFit.p = F, rugplotPartialResid.p = F,
		scalePartialResid.p = T)

	menuAovRob(formula = test$formula, data = test$data,
		rob.rad.p = method, sequentialSS.p = F,
		plotPartialResid.p = T, plotPartialFit.p = T, rugplotPartialResid.p = T,
		scalePartialResid.p = F)

	menuAovRob(formula = test$formula, data = test$data,
		rob.rad.p = method, sequentialSS.p = F,
		plotPartialResid.p = T, plotPartialFit.p = T, rugplotPartialResid.p = F,
		scalePartialResid.p = T)

	menuAovRob(formula = test$formula, data = test$data,
		rob.rad.p = method, sequentialSS.p = F,
		plotPartialResid.p = T, plotPartialFit.p = F, rugplotPartialResid.p = T,
		scalePartialResid.p = T)

	menuAovRob(formula = test$formula, data = test$data,
		rob.rad.p = method, sequentialSS.p = F,
		plotPartialResid.p = T, plotPartialFit.p = T, rugplotPartialResid.p = T,
		scalePartialResid.p = T)
	}
}